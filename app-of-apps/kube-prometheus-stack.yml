apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "*"
    helm:
      values: |
        grafana:
          adminPassword: password
          service:
            type: ClusterIP
          replicas: 2
          persistence:
            enabled: false
          envFromSecret: grafana-db-secret
          grafana.ini:
            server:
              root_url: https://grafana.coil398.io/
              serve_from_sub_path: false
              protocol: http
              http_port: 3000
              domain: grafana.coil398.io
            security:
              allow_embedding: true
            database:
              type: postgres
              host: postgres-postgresql-ha-pgpool.postgres.svc.cluster.local:5432
              name: grafana
              user: postgres
              password: ${database-password}
              ssl_mode: disable
              max_idle_conn: 2
              max_open_conn: 10
              conn_max_lifetime: 14400
              log_queries: false
            session:
              provider: postgres
              provider_config: user=postgres password=${database-password} host=postgres-postgresql-ha-pgpool.postgres.svc.cluster.local port=5432 dbname=grafana sslmode=disable

        prometheus:
          prometheusSpec:
            replicas: 2
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}
            retention: 30d
            retentionSize: 50GB
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteOnce"]
                  storageClassName: longhorn-r2
                  resources:
                    requests:
                      storage: 100Gi

        alertmanager:
          alertmanagerSpec:
            replicas: 3
            storage:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteOnce"]
                  storageClassName: longhorn-r2
                  resources:
                    requests:
                      storage: 10Gi

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/coil398/home-k8s
    path: manifests/grafana
    targetRevision: main
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
