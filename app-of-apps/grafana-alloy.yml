apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-alloy
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: alloy
    targetRevision: "*"
    helm:
      values: |
        rbac:
          create: true
        serviceAccount:
          create: true
          name: alloy
        clusterRole:
          create: true
          rules:
            - apiGroups: [""]
              resources: ["pods", "pods/log", "nodes", "services", "endpoints", "namespaces"]
              verbs: ["get", "list", "watch"]
            - apiGroups: [""]
              resources: ["configmaps", "secrets"]
              verbs: ["get", "list", "watch"]
            - apiGroups: ["apps"]
              resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
              verbs: ["get", "list", "watch"]
            - apiGroups: ["monitoring.coreos.com"]
              resources: ["prometheusrules"]
              verbs: ["get", "list", "watch"]
        controller:
          type: daemonset
        alloy:
          configMap:
            content: |
              // Kubernetes Podの発見
              discovery.kubernetes "pod" {
                role = "pod"
                namespaces {
                  own_namespace = false
                  names = []  // 全てのnamespaceを対象
                }
              }
              discovery.relabel "pod_logs" {
                targets = discovery.kubernetes.pod.targets
                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  action = "replace"
                  target_label = "namespace"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  action = "replace"
                  target_label = "pod"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  target_label = "container"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
                  action = "replace"
                  target_label = "app"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_node_name"]
                  action = "replace"
                  target_label = "node"
                }
                rule {
                  source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  separator = "/"
                  target_label = "job"
                }
              }
              loki.source.kubernetes "pods" {
                targets = discovery.relabel.pod_logs.output
                forward_to = [loki.write.default.receiver]
                clustering {
                  enabled = true
                }
              }
              loki.write "default" {
                endpoint {
                  url = "http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push"
                }
                wal {
                  enabled = true
                }
              }
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true      - CreateNamespace=true
